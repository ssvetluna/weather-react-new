{"ast":null,"code":"var _jsxFileName = \"/Users/svetlanastepanenko/Desktop/weather-react-new/src/Forecast.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport MainImage from \"./MainImage\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport CurrentDate from \"./CurrentDate\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Forecast(props) {\n  _s();\n\n  let [loaded, setLoaded] = useState(false);\n  let [forecast, setForecast] = useState(null);\n\n  function handleResponse(response) {\n    setLoaded(true);\n    setForecast(response.data.hourly);\n    console.log(response);\n  }\n\n  useEffect(() => {\n    setLoaded(false);\n  }, [props.coords]);\n\n  if (loaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Forecast\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: forecast.map(function (hourlyForecast, index) {\n          if (index < 6 && index > 0) {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"ForecastDate\",\n                children: /*#__PURE__*/_jsxDEV(CurrentDate, {\n                  date: new Date(hourlyForecast.dt * 1000),\n                  style: \"forecast\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 29,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 28,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"ForecastImage\",\n                children: /*#__PURE__*/_jsxDEV(MainImage, {\n                  icon: hourlyForecast.weather[0].icon,\n                  size: 40\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 35,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"ForecastTemp\",\n                children: [Math.round(hourlyForecast.temp), \"\\xB0\", \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 17\n            }, this);\n          } else {\n            return null;\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this);\n  } else {\n    let apiUrl = `https://api.openweathermap.org/data/2.5/onecall?lat=${props.coords.lat}&lon=${props.coords.lon}&appid=6643c7326a4c2a38838264a28531d97e&units=metric`;\n    axios.get(apiUrl).then(handleResponse);\n    return null;\n  }\n}\n\n_s(Forecast, \"kLNsBjMbwg/21mEy29QJZwMPCGo=\");\n\n_c = Forecast;\n\nvar _c;\n\n$RefreshReg$(_c, \"Forecast\");","map":{"version":3,"names":["React","MainImage","useState","useEffect","axios","CurrentDate","Forecast","props","loaded","setLoaded","forecast","setForecast","handleResponse","response","data","hourly","console","log","coords","map","hourlyForecast","index","Date","dt","weather","icon","Math","round","temp","apiUrl","lat","lon","get","then"],"sources":["/Users/svetlanastepanenko/Desktop/weather-react-new/src/Forecast.js"],"sourcesContent":["import React from \"react\";\nimport MainImage from \"./MainImage\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport CurrentDate from \"./CurrentDate\";\n\nexport default function Forecast(props) {\n  let [loaded, setLoaded] = useState(false);\n  let [forecast, setForecast] = useState(null);\n\n  function handleResponse(response) {\n    setLoaded(true);\n    setForecast(response.data.hourly);\n    console.log(response);\n  }\n  useEffect(() => {\n    setLoaded(false);\n  }, [props.coords]);\n\n  if (loaded) {\n    return (\n      <div className=\"Forecast\">\n        <div className=\"row\">\n          {forecast.map(function (hourlyForecast, index) {\n            if (index < 6 && index > 0) {\n              return (\n                <div className=\"col-2\" key={index}>\n                  <div className=\"ForecastDate\">\n                    <CurrentDate\n                      date={new Date(hourlyForecast.dt * 1000)}\n                      style=\"forecast\"\n                    />\n                  </div>\n                  <div className=\"ForecastImage\">\n                    <MainImage\n                      icon={hourlyForecast.weather[0].icon}\n                      size={40}\n                    />\n                  </div>\n                  <div className=\"ForecastTemp\">\n                    {Math.round(hourlyForecast.temp)}Â°{\" \"}\n                  </div>\n                </div>\n              );\n            } else {\n              return null;\n            }\n          })}\n        </div>\n      </div>\n    );\n  } else {\n    let apiUrl = `https://api.openweathermap.org/data/2.5/onecall?lat=${props.coords.lat}&lon=${props.coords.lon}&appid=6643c7326a4c2a38838264a28531d97e&units=metric`;\n    axios.get(apiUrl).then(handleResponse);\n    return null;\n  }\n}\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;EAAA;;EACtC,IAAI,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,KAAD,CAAlC;EACA,IAAI,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,IAAD,CAAtC;;EAEA,SAASU,cAAT,CAAwBC,QAAxB,EAAkC;IAChCJ,SAAS,CAAC,IAAD,CAAT;IACAE,WAAW,CAACE,QAAQ,CAACC,IAAT,CAAcC,MAAf,CAAX;IACAC,OAAO,CAACC,GAAR,CAAYJ,QAAZ;EACD;;EACDV,SAAS,CAAC,MAAM;IACdM,SAAS,CAAC,KAAD,CAAT;EACD,CAFQ,EAEN,CAACF,KAAK,CAACW,MAAP,CAFM,CAAT;;EAIA,IAAIV,MAAJ,EAAY;IACV,oBACE;MAAK,SAAS,EAAC,UAAf;MAAA,uBACE;QAAK,SAAS,EAAC,KAAf;QAAA,UACGE,QAAQ,CAACS,GAAT,CAAa,UAAUC,cAAV,EAA0BC,KAA1B,EAAiC;UAC7C,IAAIA,KAAK,GAAG,CAAR,IAAaA,KAAK,GAAG,CAAzB,EAA4B;YAC1B,oBACE;cAAK,SAAS,EAAC,OAAf;cAAA,wBACE;gBAAK,SAAS,EAAC,cAAf;gBAAA,uBACE,QAAC,WAAD;kBACE,IAAI,EAAE,IAAIC,IAAJ,CAASF,cAAc,CAACG,EAAf,GAAoB,IAA7B,CADR;kBAEE,KAAK,EAAC;gBAFR;kBAAA;kBAAA;kBAAA;gBAAA;cADF;gBAAA;gBAAA;gBAAA;cAAA,QADF,eAOE;gBAAK,SAAS,EAAC,eAAf;gBAAA,uBACE,QAAC,SAAD;kBACE,IAAI,EAAEH,cAAc,CAACI,OAAf,CAAuB,CAAvB,EAA0BC,IADlC;kBAEE,IAAI,EAAE;gBAFR;kBAAA;kBAAA;kBAAA;gBAAA;cADF;gBAAA;gBAAA;gBAAA;cAAA,QAPF,eAaE;gBAAK,SAAS,EAAC,cAAf;gBAAA,WACGC,IAAI,CAACC,KAAL,CAAWP,cAAc,CAACQ,IAA1B,CADH,UACqC,GADrC;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAbF;YAAA,GAA4BP,KAA5B;cAAA;cAAA;cAAA;YAAA,QADF;UAmBD,CApBD,MAoBO;YACL,OAAO,IAAP;UACD;QACF,CAxBA;MADH;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF;EA+BD,CAhCD,MAgCO;IACL,IAAIQ,MAAM,GAAI,uDAAsDtB,KAAK,CAACW,MAAN,CAAaY,GAAI,QAAOvB,KAAK,CAACW,MAAN,CAAaa,GAAI,sDAA7G;IACA3B,KAAK,CAAC4B,GAAN,CAAUH,MAAV,EAAkBI,IAAlB,CAAuBrB,cAAvB;IACA,OAAO,IAAP;EACD;AACF;;GAlDuBN,Q;;KAAAA,Q"},"metadata":{},"sourceType":"module"}