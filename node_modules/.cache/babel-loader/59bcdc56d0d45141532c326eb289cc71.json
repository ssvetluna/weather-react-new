{"ast":null,"code":"var _jsxFileName = \"/Users/svetlanastepanenko/Desktop/weather-react-new/src/ForecastDays.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport MainImage from \"./MainImage\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport CurrentDate from \"./CurrentDate\";\nimport \"./ForecastDays.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ForecastDays(props) {\n  _s();\n\n  let [loaded, setLoaded] = useState(false);\n  let [date, setDate] = useState(props.coords.date);\n\n  function handleResponse(response) {\n    setDate(new Date(response.data.daily[1].dt * 1000));\n    setLoaded(true);\n    console.log(response);\n  }\n\n  if (loaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ForecastDays\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Card\",\n        id: \"Forecastbase\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"ForecastDaysDate\",\n          children: /*#__PURE__*/_jsxDEV(CurrentDate, {\n            date: date,\n            style: \"forecast\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"ForecastDaysImage\",\n          children: /*#__PURE__*/_jsxDEV(MainImage, {\n            icon: \"03n\",\n            size: 40\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"ForecastDaysTempMax\",\n          children: \"17\\xB0 \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"ForecastDaysTempMin\",\n          children: \"10\\xB0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this);\n  } else {\n    let apiUrl = `https://api.openweathermap.org/data/2.5/onecall?lat=${props.coords.lat}&lon=${props.coords.lon}&exclude=hourly&appid=2f7f11cce544f115af9a2c80b2a612b4&units=metric`;\n    axios.get(apiUrl).then(handleResponse);\n    return null;\n  }\n}\n\n_s(ForecastDays, \"mbQSk94DmBVijNWWrV10Up+rMFo=\");\n\n_c = ForecastDays;\n\nvar _c;\n\n$RefreshReg$(_c, \"ForecastDays\");","map":{"version":3,"names":["React","MainImage","useState","axios","CurrentDate","ForecastDays","props","loaded","setLoaded","date","setDate","coords","handleResponse","response","Date","data","daily","dt","console","log","apiUrl","lat","lon","get","then"],"sources":["/Users/svetlanastepanenko/Desktop/weather-react-new/src/ForecastDays.js"],"sourcesContent":["import React from \"react\";\nimport MainImage from \"./MainImage\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport CurrentDate from \"./CurrentDate\";\n\nimport \"./ForecastDays.css\";\n\nexport default function ForecastDays(props) {\n  let [loaded, setLoaded] = useState(false);\n  let [date, setDate] = useState(props.coords.date);\n\n  function handleResponse(response) {\n    setDate(new Date(response.data.daily[1].dt * 1000));\n    setLoaded(true);\n    console.log(response);\n  }\n\n  if (loaded) {\n    return (\n      <div className=\"ForecastDays\">\n        <div className=\"Card\" id=\"Forecastbase\">\n          <span className=\"ForecastDaysDate\">\n            <CurrentDate date={date} style=\"forecast\" />\n          </span>\n          <span className=\"ForecastDaysImage\">\n            <MainImage icon=\"03n\" size={40} />\n          </span>\n          <span className=\"ForecastDaysTempMax\">17° </span>\n          <span className=\"ForecastDaysTempMin\">10°</span>\n        </div>\n      </div>\n    );\n  } else {\n    let apiUrl = `https://api.openweathermap.org/data/2.5/onecall?lat=${props.coords.lat}&lon=${props.coords.lon}&exclude=hourly&appid=2f7f11cce544f115af9a2c80b2a612b4&units=metric`;\n    axios.get(apiUrl).then(handleResponse);\n    return null;\n  }\n}\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,OAAO,oBAAP;;AAEA,eAAe,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;EAAA;;EAC1C,IAAI,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,KAAD,CAAlC;EACA,IAAI,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAACI,KAAK,CAACK,MAAN,CAAaF,IAAd,CAA9B;;EAEA,SAASG,cAAT,CAAwBC,QAAxB,EAAkC;IAChCH,OAAO,CAAC,IAAII,IAAJ,CAASD,QAAQ,CAACE,IAAT,CAAcC,KAAd,CAAoB,CAApB,EAAuBC,EAAvB,GAA4B,IAArC,CAAD,CAAP;IACAT,SAAS,CAAC,IAAD,CAAT;IACAU,OAAO,CAACC,GAAR,CAAYN,QAAZ;EACD;;EAED,IAAIN,MAAJ,EAAY;IACV,oBACE;MAAK,SAAS,EAAC,cAAf;MAAA,uBACE;QAAK,SAAS,EAAC,MAAf;QAAsB,EAAE,EAAC,cAAzB;QAAA,wBACE;UAAM,SAAS,EAAC,kBAAhB;UAAA,uBACE,QAAC,WAAD;YAAa,IAAI,EAAEE,IAAnB;YAAyB,KAAK,EAAC;UAA/B;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA,QADF,eAIE;UAAM,SAAS,EAAC,mBAAhB;UAAA,uBACE,QAAC,SAAD;YAAW,IAAI,EAAC,KAAhB;YAAsB,IAAI,EAAE;UAA5B;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA,QAJF,eAOE;UAAM,SAAS,EAAC,qBAAhB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAPF,eAQE;UAAM,SAAS,EAAC,qBAAhB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QARF;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF;EAcD,CAfD,MAeO;IACL,IAAIW,MAAM,GAAI,uDAAsDd,KAAK,CAACK,MAAN,CAAaU,GAAI,QAAOf,KAAK,CAACK,MAAN,CAAaW,GAAI,qEAA7G;IACAnB,KAAK,CAACoB,GAAN,CAAUH,MAAV,EAAkBI,IAAlB,CAAuBZ,cAAvB;IACA,OAAO,IAAP;EACD;AACF;;GA9BuBP,Y;;KAAAA,Y"},"metadata":{},"sourceType":"module"}