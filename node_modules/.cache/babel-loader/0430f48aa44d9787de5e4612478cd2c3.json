{"ast":null,"code":"var _jsxFileName = \"/Users/svetlanastepanenko/Desktop/weather-react-new/src/Forecast.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport MainImage from \"./MainImage\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport CurrentDate from \"./CurrentDate\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ForecastDays(props) {\n  _s();\n\n  let [loaded, setLoaded] = useState(false);\n  let [forecast, setForecast] = useState(null);\n\n  function handleResponse(response) {\n    setLoaded(true);\n    setForecast(response.data.daily);\n  }\n\n  useEffect(() => {\n    setLoaded(false);\n  }, [props.coords]);\n\n  if (loaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ForecastDays\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: forecast.map(function (dailyForecast, index) {\n          if (index < 7) {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-12\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"Card\",\n                id: \"Forecastbase\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"ForecastDaysDate\",\n                  children: /*#__PURE__*/_jsxDEV(CurrentDate, {\n                    date: new Date(dailyForecast.dt * 1000),\n                    style: \"forecast\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 29,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 28,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"ForecastDaysImage\",\n                  children: /*#__PURE__*/_jsxDEV(MainImage, {\n                    icon: dailyForecast.weather[0].icon,\n                    size: 40\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 35,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 34,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"ForecastDaysTempMax\",\n                  children: [Math.round(dailyForecast.temp.max), \"\\xB0\", \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 40,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"ForecastDaysTempMin\",\n                  children: [Math.round(dailyForecast.temp.min), \"\\xB0\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 43,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 27,\n                columnNumber: 19\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 17\n            }, this);\n          } else {\n            return null;\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this);\n  } else {\n    let apiUrl = `https://api.openweathermap.org/data/2.5/onecall?lat=${props.coords.lat}&lon=${props.coords.lon}&appid=6643c7326a4c2a38838264a28531d97e&units=metric`;\n    axios.get(apiUrl).then(handleResponse);\n    return null;\n  }\n}\n\n_s(ForecastDays, \"kLNsBjMbwg/21mEy29QJZwMPCGo=\");\n\n_c = ForecastDays;\n\nvar _c;\n\n$RefreshReg$(_c, \"ForecastDays\");","map":{"version":3,"names":["React","MainImage","useState","useEffect","axios","CurrentDate","ForecastDays","props","loaded","setLoaded","forecast","setForecast","handleResponse","response","data","daily","coords","map","dailyForecast","index","Date","dt","weather","icon","Math","round","temp","max","min","apiUrl","lat","lon","get","then"],"sources":["/Users/svetlanastepanenko/Desktop/weather-react-new/src/Forecast.js"],"sourcesContent":["import React from \"react\";\nimport MainImage from \"./MainImage\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport CurrentDate from \"./CurrentDate\";\n\nexport default function ForecastDays(props) {\n  let [loaded, setLoaded] = useState(false);\n  let [forecast, setForecast] = useState(null);\n\n  function handleResponse(response) {\n    setLoaded(true);\n    setForecast(response.data.daily);\n  }\n  useEffect(() => {\n    setLoaded(false);\n  }, [props.coords]);\n\n  if (loaded) {\n    return (\n      <div className=\"ForecastDays\">\n        <div className=\"row\">\n          {forecast.map(function (dailyForecast, index) {\n            if (index < 7) {\n              return (\n                <div className=\"col-12\" key={index}>\n                  <div className=\"Card\" id=\"Forecastbase\">\n                    <span className=\"ForecastDaysDate\">\n                      <CurrentDate\n                        date={new Date(dailyForecast.dt * 1000)}\n                        style=\"forecast\"\n                      />\n                    </span>\n                    <span className=\"ForecastDaysImage\">\n                      <MainImage\n                        icon={dailyForecast.weather[0].icon}\n                        size={40}\n                      />\n                    </span>\n                    <span className=\"ForecastDaysTempMax\">\n                      {Math.round(dailyForecast.temp.max)}°{\" \"}\n                    </span>\n                    <span className=\"ForecastDaysTempMin\">\n                      {Math.round(dailyForecast.temp.min)}°\n                    </span>\n                  </div>\n                </div>\n              );\n            } else {\n              return null;\n            }\n          })}\n        </div>\n      </div>\n    );\n  } else {\n    let apiUrl = `https://api.openweathermap.org/data/2.5/onecall?lat=${props.coords.lat}&lon=${props.coords.lon}&appid=6643c7326a4c2a38838264a28531d97e&units=metric`;\n    axios.get(apiUrl).then(handleResponse);\n    return null;\n  }\n}\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,eAAe,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;EAAA;;EAC1C,IAAI,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,KAAD,CAAlC;EACA,IAAI,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,IAAD,CAAtC;;EAEA,SAASU,cAAT,CAAwBC,QAAxB,EAAkC;IAChCJ,SAAS,CAAC,IAAD,CAAT;IACAE,WAAW,CAACE,QAAQ,CAACC,IAAT,CAAcC,KAAf,CAAX;EACD;;EACDZ,SAAS,CAAC,MAAM;IACdM,SAAS,CAAC,KAAD,CAAT;EACD,CAFQ,EAEN,CAACF,KAAK,CAACS,MAAP,CAFM,CAAT;;EAIA,IAAIR,MAAJ,EAAY;IACV,oBACE;MAAK,SAAS,EAAC,cAAf;MAAA,uBACE;QAAK,SAAS,EAAC,KAAf;QAAA,UACGE,QAAQ,CAACO,GAAT,CAAa,UAAUC,aAAV,EAAyBC,KAAzB,EAAgC;UAC5C,IAAIA,KAAK,GAAG,CAAZ,EAAe;YACb,oBACE;cAAK,SAAS,EAAC,QAAf;cAAA,uBACE;gBAAK,SAAS,EAAC,MAAf;gBAAsB,EAAE,EAAC,cAAzB;gBAAA,wBACE;kBAAM,SAAS,EAAC,kBAAhB;kBAAA,uBACE,QAAC,WAAD;oBACE,IAAI,EAAE,IAAIC,IAAJ,CAASF,aAAa,CAACG,EAAd,GAAmB,IAA5B,CADR;oBAEE,KAAK,EAAC;kBAFR;oBAAA;oBAAA;oBAAA;kBAAA;gBADF;kBAAA;kBAAA;kBAAA;gBAAA,QADF,eAOE;kBAAM,SAAS,EAAC,mBAAhB;kBAAA,uBACE,QAAC,SAAD;oBACE,IAAI,EAAEH,aAAa,CAACI,OAAd,CAAsB,CAAtB,EAAyBC,IADjC;oBAEE,IAAI,EAAE;kBAFR;oBAAA;oBAAA;oBAAA;kBAAA;gBADF;kBAAA;kBAAA;kBAAA;gBAAA,QAPF,eAaE;kBAAM,SAAS,EAAC,qBAAhB;kBAAA,WACGC,IAAI,CAACC,KAAL,CAAWP,aAAa,CAACQ,IAAd,CAAmBC,GAA9B,CADH,UACwC,GADxC;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA,QAbF,eAgBE;kBAAM,SAAS,EAAC,qBAAhB;kBAAA,WACGH,IAAI,CAACC,KAAL,CAAWP,aAAa,CAACQ,IAAd,CAAmBE,GAA9B,CADH;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA,QAhBF;cAAA;gBAAA;gBAAA;gBAAA;cAAA;YADF,GAA6BT,KAA7B;cAAA;cAAA;cAAA;YAAA,QADF;UAwBD,CAzBD,MAyBO;YACL,OAAO,IAAP;UACD;QACF,CA7BA;MADH;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF;EAoCD,CArCD,MAqCO;IACL,IAAIU,MAAM,GAAI,uDAAsDtB,KAAK,CAACS,MAAN,CAAac,GAAI,QAAOvB,KAAK,CAACS,MAAN,CAAae,GAAI,sDAA7G;IACA3B,KAAK,CAAC4B,GAAN,CAAUH,MAAV,EAAkBI,IAAlB,CAAuBrB,cAAvB;IACA,OAAO,IAAP;EACD;AACF;;GAtDuBN,Y;;KAAAA,Y"},"metadata":{},"sourceType":"module"}