{"ast":null,"code":"var _jsxFileName = \"/Users/svetlanastepanenko/Desktop/weather-react-new/src/CurrentDate.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CurrentDate(props) {\n  let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thuesday\", \"Friday\", \"Saturday\"];\n  let months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n  let month = props.date.getMonth();\n  let day = props.date.getDay();\n  let hours = props.date.getHours();\n  let minutes = props.date.getMinutes();\n  let date = props.date.getDate();\n\n  if (props.style === \"current\") {\n    if (minutes < 10) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"CurrentDate\",\n        children: [days[day], \" \", hours, \":0\", minutes]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"CurrentDate\",\n        children: [days[day], \" \", hours, \":\", minutes]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this);\n    }\n  } else {\n    if (props.style === \"forecastDays\") {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"CurrentDate\",\n        children: [days[day], \" \", months[month], \" \", date]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this);\n    } else {\n      if (minutes < 10) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"CurrentDate\",\n          children: [hours, \":0\", minutes]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"CurrentDate\",\n          children: [hours, \":\", minutes]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this);\n      }\n    }\n  }\n}\n_c = CurrentDate;\n\nvar _c;\n\n$RefreshReg$(_c, \"CurrentDate\");","map":{"version":3,"names":["React","CurrentDate","props","days","months","month","date","getMonth","day","getDay","hours","getHours","minutes","getMinutes","getDate","style"],"sources":["/Users/svetlanastepanenko/Desktop/weather-react-new/src/CurrentDate.js"],"sourcesContent":["import React from \"react\";\n\nexport default function CurrentDate(props) {\n  let days = [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thuesday\",\n    \"Friday\",\n    \"Saturday\",\n  ];\n  let months = [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ];\n  let month = props.date.getMonth();\n  let day = props.date.getDay();\n  let hours = props.date.getHours();\n  let minutes = props.date.getMinutes();\n  let date = props.date.getDate();\n\n  if (props.style === \"current\") {\n    if (minutes < 10) {\n      return (\n        <div className=\"CurrentDate\">\n          {days[day]} {hours}:0{minutes}\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"CurrentDate\">\n          {days[day]} {hours}:{minutes}\n        </div>\n      );\n    }\n  } else {\n    if (props.style === \"forecastDays\") {\n      return (\n        <span className=\"CurrentDate\">\n          {days[day]} {months[month]} {date}\n        </span>\n      );\n    } else {\n      if (minutes < 10) {\n        return (\n          <div className=\"CurrentDate\">\n            {hours}:0{minutes}\n          </div>\n        );\n      } else {\n        return (\n          <div className=\"CurrentDate\">\n            {hours}:{minutes}\n          </div>\n        );\n      }\n    }\n  }\n}\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA4B;EACzC,IAAIC,IAAI,GAAG,CACT,QADS,EAET,QAFS,EAGT,SAHS,EAIT,WAJS,EAKT,UALS,EAMT,QANS,EAOT,UAPS,CAAX;EASA,IAAIC,MAAM,GAAG,CACX,KADW,EAEX,KAFW,EAGX,KAHW,EAIX,KAJW,EAKX,KALW,EAMX,KANW,EAOX,KAPW,EAQX,KARW,EASX,KATW,EAUX,KAVW,EAWX,KAXW,EAYX,KAZW,CAAb;EAcA,IAAIC,KAAK,GAAGH,KAAK,CAACI,IAAN,CAAWC,QAAX,EAAZ;EACA,IAAIC,GAAG,GAAGN,KAAK,CAACI,IAAN,CAAWG,MAAX,EAAV;EACA,IAAIC,KAAK,GAAGR,KAAK,CAACI,IAAN,CAAWK,QAAX,EAAZ;EACA,IAAIC,OAAO,GAAGV,KAAK,CAACI,IAAN,CAAWO,UAAX,EAAd;EACA,IAAIP,IAAI,GAAGJ,KAAK,CAACI,IAAN,CAAWQ,OAAX,EAAX;;EAEA,IAAIZ,KAAK,CAACa,KAAN,KAAgB,SAApB,EAA+B;IAC7B,IAAIH,OAAO,GAAG,EAAd,EAAkB;MAChB,oBACE;QAAK,SAAS,EAAC,aAAf;QAAA,WACGT,IAAI,CAACK,GAAD,CADP,OACeE,KADf,QACwBE,OADxB;MAAA;QAAA;QAAA;QAAA;MAAA,QADF;IAKD,CAND,MAMO;MACL,oBACE;QAAK,SAAS,EAAC,aAAf;QAAA,WACGT,IAAI,CAACK,GAAD,CADP,OACeE,KADf,OACuBE,OADvB;MAAA;QAAA;QAAA;QAAA;MAAA,QADF;IAKD;EACF,CAdD,MAcO;IACL,IAAIV,KAAK,CAACa,KAAN,KAAgB,cAApB,EAAoC;MAClC,oBACE;QAAM,SAAS,EAAC,aAAhB;QAAA,WACGZ,IAAI,CAACK,GAAD,CADP,OACeJ,MAAM,CAACC,KAAD,CADrB,OAC+BC,IAD/B;MAAA;QAAA;QAAA;QAAA;MAAA,QADF;IAKD,CAND,MAMO;MACL,IAAIM,OAAO,GAAG,EAAd,EAAkB;QAChB,oBACE;UAAK,SAAS,EAAC,aAAf;UAAA,WACGF,KADH,QACYE,OADZ;QAAA;UAAA;UAAA;UAAA;QAAA,QADF;MAKD,CAND,MAMO;QACL,oBACE;UAAK,SAAS,EAAC,aAAf;UAAA,WACGF,KADH,OACWE,OADX;QAAA;UAAA;UAAA;UAAA;QAAA,QADF;MAKD;IACF;EACF;AACF;KAnEuBX,W"},"metadata":{},"sourceType":"module"}